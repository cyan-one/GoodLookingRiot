"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.instanceForInstanceId = instanceForInstanceId;
exports.protocolNameForInstanceId = protocolNameForInstanceId;

// Find a protocol 'instance' with a given instance_id
// in the supplied protocols dict
function instanceForInstanceId(protocols, instance_id) {
  if (!instance_id) return null;

  for (const proto of Object.keys(protocols)) {
    if (!protocols[proto].instances && protocols[proto].instances instanceof Array) continue;

    for (const instance of protocols[proto].instances) {
      if (instance.instance_id == instance_id) return instance;
    }
  }
} // given an instance_id, return the name of the protocol for
// that instance ID in the supplied protocols dict


function protocolNameForInstanceId(protocols, instance_id) {
  if (!instance_id) return null;

  for (const proto of Object.keys(protocols)) {
    if (!protocols[proto].instances && protocols[proto].instances instanceof Array) continue;

    for (const instance of protocols[proto].instances) {
      if (instance.instance_id == instance_id) return proto;
    }
  }
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy91dGlscy9EaXJlY3RvcnlVdGlscy5qcyJdLCJuYW1lcyI6WyJpbnN0YW5jZUZvckluc3RhbmNlSWQiLCJwcm90b2NvbHMiLCJpbnN0YW5jZV9pZCIsInByb3RvIiwiT2JqZWN0Iiwia2V5cyIsImluc3RhbmNlcyIsIkFycmF5IiwiaW5zdGFuY2UiLCJwcm90b2NvbE5hbWVGb3JJbnN0YW5jZUlkIl0sIm1hcHBpbmdzIjoiOzs7Ozs7OztBQUFBO0FBQ0E7QUFDTyxTQUFTQSxxQkFBVCxDQUErQkMsU0FBL0IsRUFBMENDLFdBQTFDLEVBQXVEO0FBQzFELE1BQUksQ0FBQ0EsV0FBTCxFQUFrQixPQUFPLElBQVA7O0FBQ2xCLE9BQUssTUFBTUMsS0FBWCxJQUFvQkMsTUFBTSxDQUFDQyxJQUFQLENBQVlKLFNBQVosQ0FBcEIsRUFBNEM7QUFDeEMsUUFBSSxDQUFDQSxTQUFTLENBQUNFLEtBQUQsQ0FBVCxDQUFpQkcsU0FBbEIsSUFBK0JMLFNBQVMsQ0FBQ0UsS0FBRCxDQUFULENBQWlCRyxTQUFqQixZQUFzQ0MsS0FBekUsRUFBZ0Y7O0FBQ2hGLFNBQUssTUFBTUMsUUFBWCxJQUF1QlAsU0FBUyxDQUFDRSxLQUFELENBQVQsQ0FBaUJHLFNBQXhDLEVBQW1EO0FBQy9DLFVBQUlFLFFBQVEsQ0FBQ04sV0FBVCxJQUF3QkEsV0FBNUIsRUFBeUMsT0FBT00sUUFBUDtBQUM1QztBQUNKO0FBQ0osQyxDQUVEO0FBQ0E7OztBQUNPLFNBQVNDLHlCQUFULENBQW1DUixTQUFuQyxFQUE4Q0MsV0FBOUMsRUFBMkQ7QUFDOUQsTUFBSSxDQUFDQSxXQUFMLEVBQWtCLE9BQU8sSUFBUDs7QUFDbEIsT0FBSyxNQUFNQyxLQUFYLElBQW9CQyxNQUFNLENBQUNDLElBQVAsQ0FBWUosU0FBWixDQUFwQixFQUE0QztBQUN4QyxRQUFJLENBQUNBLFNBQVMsQ0FBQ0UsS0FBRCxDQUFULENBQWlCRyxTQUFsQixJQUErQkwsU0FBUyxDQUFDRSxLQUFELENBQVQsQ0FBaUJHLFNBQWpCLFlBQXNDQyxLQUF6RSxFQUFnRjs7QUFDaEYsU0FBSyxNQUFNQyxRQUFYLElBQXVCUCxTQUFTLENBQUNFLEtBQUQsQ0FBVCxDQUFpQkcsU0FBeEMsRUFBbUQ7QUFDL0MsVUFBSUUsUUFBUSxDQUFDTixXQUFULElBQXdCQSxXQUE1QixFQUF5QyxPQUFPQyxLQUFQO0FBQzVDO0FBQ0o7QUFDSiIsInNvdXJjZXNDb250ZW50IjpbIi8vIEZpbmQgYSBwcm90b2NvbCAnaW5zdGFuY2UnIHdpdGggYSBnaXZlbiBpbnN0YW5jZV9pZFxuLy8gaW4gdGhlIHN1cHBsaWVkIHByb3RvY29scyBkaWN0XG5leHBvcnQgZnVuY3Rpb24gaW5zdGFuY2VGb3JJbnN0YW5jZUlkKHByb3RvY29scywgaW5zdGFuY2VfaWQpIHtcbiAgICBpZiAoIWluc3RhbmNlX2lkKSByZXR1cm4gbnVsbDtcbiAgICBmb3IgKGNvbnN0IHByb3RvIG9mIE9iamVjdC5rZXlzKHByb3RvY29scykpIHtcbiAgICAgICAgaWYgKCFwcm90b2NvbHNbcHJvdG9dLmluc3RhbmNlcyAmJiBwcm90b2NvbHNbcHJvdG9dLmluc3RhbmNlcyBpbnN0YW5jZW9mIEFycmF5KSBjb250aW51ZTtcbiAgICAgICAgZm9yIChjb25zdCBpbnN0YW5jZSBvZiBwcm90b2NvbHNbcHJvdG9dLmluc3RhbmNlcykge1xuICAgICAgICAgICAgaWYgKGluc3RhbmNlLmluc3RhbmNlX2lkID09IGluc3RhbmNlX2lkKSByZXR1cm4gaW5zdGFuY2U7XG4gICAgICAgIH1cbiAgICB9XG59XG5cbi8vIGdpdmVuIGFuIGluc3RhbmNlX2lkLCByZXR1cm4gdGhlIG5hbWUgb2YgdGhlIHByb3RvY29sIGZvclxuLy8gdGhhdCBpbnN0YW5jZSBJRCBpbiB0aGUgc3VwcGxpZWQgcHJvdG9jb2xzIGRpY3RcbmV4cG9ydCBmdW5jdGlvbiBwcm90b2NvbE5hbWVGb3JJbnN0YW5jZUlkKHByb3RvY29scywgaW5zdGFuY2VfaWQpIHtcbiAgICBpZiAoIWluc3RhbmNlX2lkKSByZXR1cm4gbnVsbDtcbiAgICBmb3IgKGNvbnN0IHByb3RvIG9mIE9iamVjdC5rZXlzKHByb3RvY29scykpIHtcbiAgICAgICAgaWYgKCFwcm90b2NvbHNbcHJvdG9dLmluc3RhbmNlcyAmJiBwcm90b2NvbHNbcHJvdG9dLmluc3RhbmNlcyBpbnN0YW5jZW9mIEFycmF5KSBjb250aW51ZTtcbiAgICAgICAgZm9yIChjb25zdCBpbnN0YW5jZSBvZiBwcm90b2NvbHNbcHJvdG9dLmluc3RhbmNlcykge1xuICAgICAgICAgICAgaWYgKGluc3RhbmNlLmluc3RhbmNlX2lkID09IGluc3RhbmNlX2lkKSByZXR1cm4gcHJvdG87XG4gICAgICAgIH1cbiAgICB9XG59XG4iXX0=