"use strict";

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _react = _interopRequireDefault(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var sdk = _interopRequireWildcard(require("../../../index"));

var _languageHandler = require("../../../languageHandler");

var _classnames = _interopRequireDefault(require("classnames"));

/*
Copyright 2016 OpenMarket Ltd

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/
class MemberDeviceInfo extends _react.default.Component {
  render() {
    const DeviceVerifyButtons = sdk.getComponent('elements.DeviceVerifyButtons'); // XXX: These checks are not cross-signing aware but this component is only used
    // from the old, pre-cross-signing memberinfopanel

    const iconClasses = (0, _classnames.default)({
      mx_MemberDeviceInfo_icon: true,
      mx_MemberDeviceInfo_icon_blacklisted: this.props.device.isBlocked(),
      mx_MemberDeviceInfo_icon_verified: this.props.device.isVerified(),
      mx_MemberDeviceInfo_icon_unverified: this.props.device.isUnverified()
    });

    const indicator = /*#__PURE__*/_react.default.createElement("div", {
      className: iconClasses
    });

    const deviceName = this.props.device.ambiguous || this.props.showDeviceId ? (this.props.device.getDisplayName() ? this.props.device.getDisplayName() : "") + " (" + this.props.device.deviceId + ")" : this.props.device.getDisplayName(); // add the deviceId as a titletext to help with debugging

    return /*#__PURE__*/_react.default.createElement("div", {
      className: "mx_MemberDeviceInfo",
      title: (0, _languageHandler._t)("device id: ") + this.props.device.deviceId
    }, indicator, /*#__PURE__*/_react.default.createElement("div", {
      className: "mx_MemberDeviceInfo_deviceInfo"
    }, /*#__PURE__*/_react.default.createElement("div", {
      className: "mx_MemberDeviceInfo_deviceId"
    }, deviceName)), /*#__PURE__*/_react.default.createElement(DeviceVerifyButtons, {
      userId: this.props.userId,
      device: this.props.device
    }));
  }

}

exports.default = MemberDeviceInfo;
MemberDeviceInfo.displayName = 'MemberDeviceInfo';
MemberDeviceInfo.propTypes = {
  userId: _propTypes.default.string.isRequired,
  device: _propTypes.default.object.isRequired
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3NyYy9jb21wb25lbnRzL3ZpZXdzL3Jvb21zL01lbWJlckRldmljZUluZm8uanMiXSwibmFtZXMiOlsiTWVtYmVyRGV2aWNlSW5mbyIsIlJlYWN0IiwiQ29tcG9uZW50IiwicmVuZGVyIiwiRGV2aWNlVmVyaWZ5QnV0dG9ucyIsInNkayIsImdldENvbXBvbmVudCIsImljb25DbGFzc2VzIiwibXhfTWVtYmVyRGV2aWNlSW5mb19pY29uIiwibXhfTWVtYmVyRGV2aWNlSW5mb19pY29uX2JsYWNrbGlzdGVkIiwicHJvcHMiLCJkZXZpY2UiLCJpc0Jsb2NrZWQiLCJteF9NZW1iZXJEZXZpY2VJbmZvX2ljb25fdmVyaWZpZWQiLCJpc1ZlcmlmaWVkIiwibXhfTWVtYmVyRGV2aWNlSW5mb19pY29uX3VudmVyaWZpZWQiLCJpc1VudmVyaWZpZWQiLCJpbmRpY2F0b3IiLCJkZXZpY2VOYW1lIiwiYW1iaWd1b3VzIiwic2hvd0RldmljZUlkIiwiZ2V0RGlzcGxheU5hbWUiLCJkZXZpY2VJZCIsInVzZXJJZCIsImRpc3BsYXlOYW1lIiwicHJvcFR5cGVzIiwiUHJvcFR5cGVzIiwic3RyaW5nIiwiaXNSZXF1aXJlZCIsIm9iamVjdCJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7QUFnQkE7O0FBQ0E7O0FBQ0E7O0FBQ0E7O0FBQ0E7O0FBcEJBOzs7Ozs7Ozs7Ozs7Ozs7QUFzQmUsTUFBTUEsZ0JBQU4sU0FBK0JDLGVBQU1DLFNBQXJDLENBQStDO0FBQzFEQyxFQUFBQSxNQUFNLEdBQUc7QUFDTCxVQUFNQyxtQkFBbUIsR0FBR0MsR0FBRyxDQUFDQyxZQUFKLENBQWlCLDhCQUFqQixDQUE1QixDQURLLENBRUw7QUFDQTs7QUFDQSxVQUFNQyxXQUFXLEdBQUcseUJBQVc7QUFDM0JDLE1BQUFBLHdCQUF3QixFQUFFLElBREM7QUFFM0JDLE1BQUFBLG9DQUFvQyxFQUFFLEtBQUtDLEtBQUwsQ0FBV0MsTUFBWCxDQUFrQkMsU0FBbEIsRUFGWDtBQUczQkMsTUFBQUEsaUNBQWlDLEVBQUUsS0FBS0gsS0FBTCxDQUFXQyxNQUFYLENBQWtCRyxVQUFsQixFQUhSO0FBSTNCQyxNQUFBQSxtQ0FBbUMsRUFBRSxLQUFLTCxLQUFMLENBQVdDLE1BQVgsQ0FBa0JLLFlBQWxCO0FBSlYsS0FBWCxDQUFwQjs7QUFNQSxVQUFNQyxTQUFTLGdCQUFJO0FBQUssTUFBQSxTQUFTLEVBQUVWO0FBQWhCLE1BQW5COztBQUNBLFVBQU1XLFVBQVUsR0FBSSxLQUFLUixLQUFMLENBQVdDLE1BQVgsQ0FBa0JRLFNBQWxCLElBQStCLEtBQUtULEtBQUwsQ0FBV1UsWUFBM0MsR0FDZixDQUFDLEtBQUtWLEtBQUwsQ0FBV0MsTUFBWCxDQUFrQlUsY0FBbEIsS0FBcUMsS0FBS1gsS0FBTCxDQUFXQyxNQUFYLENBQWtCVSxjQUFsQixFQUFyQyxHQUEwRSxFQUEzRSxJQUFpRixJQUFqRixHQUF3RixLQUFLWCxLQUFMLENBQVdDLE1BQVgsQ0FBa0JXLFFBQTFHLEdBQXFILEdBRHRHLEdBRWYsS0FBS1osS0FBTCxDQUFXQyxNQUFYLENBQWtCVSxjQUFsQixFQUZKLENBWEssQ0FlTDs7QUFDQSx3QkFDSTtBQUFLLE1BQUEsU0FBUyxFQUFDLHFCQUFmO0FBQ1EsTUFBQSxLQUFLLEVBQUUseUJBQUcsYUFBSCxJQUFvQixLQUFLWCxLQUFMLENBQVdDLE1BQVgsQ0FBa0JXO0FBRHJELE9BRU1MLFNBRk4sZUFHSTtBQUFLLE1BQUEsU0FBUyxFQUFDO0FBQWYsb0JBQ0k7QUFBSyxNQUFBLFNBQVMsRUFBQztBQUFmLE9BQ01DLFVBRE4sQ0FESixDQUhKLGVBUUksNkJBQUMsbUJBQUQ7QUFBcUIsTUFBQSxNQUFNLEVBQUUsS0FBS1IsS0FBTCxDQUFXYSxNQUF4QztBQUFnRCxNQUFBLE1BQU0sRUFBRSxLQUFLYixLQUFMLENBQVdDO0FBQW5FLE1BUkosQ0FESjtBQVlIOztBQTdCeUQ7OztBQWdDOURYLGdCQUFnQixDQUFDd0IsV0FBakIsR0FBK0Isa0JBQS9CO0FBQ0F4QixnQkFBZ0IsQ0FBQ3lCLFNBQWpCLEdBQTZCO0FBQ3pCRixFQUFBQSxNQUFNLEVBQUVHLG1CQUFVQyxNQUFWLENBQWlCQyxVQURBO0FBRXpCakIsRUFBQUEsTUFBTSxFQUFFZSxtQkFBVUcsTUFBVixDQUFpQkQ7QUFGQSxDQUE3QiIsInNvdXJjZXNDb250ZW50IjpbIi8qXG5Db3B5cmlnaHQgMjAxNiBPcGVuTWFya2V0IEx0ZFxuXG5MaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xueW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG5cbiAgICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcblxuVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG5TZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG5saW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbiovXG5cbmltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQgUHJvcFR5cGVzIGZyb20gJ3Byb3AtdHlwZXMnO1xuaW1wb3J0ICogYXMgc2RrIGZyb20gJy4uLy4uLy4uL2luZGV4JztcbmltcG9ydCB7IF90IH0gZnJvbSAnLi4vLi4vLi4vbGFuZ3VhZ2VIYW5kbGVyJztcbmltcG9ydCBjbGFzc05hbWVzIGZyb20gJ2NsYXNzbmFtZXMnO1xuXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBNZW1iZXJEZXZpY2VJbmZvIGV4dGVuZHMgUmVhY3QuQ29tcG9uZW50IHtcbiAgICByZW5kZXIoKSB7XG4gICAgICAgIGNvbnN0IERldmljZVZlcmlmeUJ1dHRvbnMgPSBzZGsuZ2V0Q29tcG9uZW50KCdlbGVtZW50cy5EZXZpY2VWZXJpZnlCdXR0b25zJyk7XG4gICAgICAgIC8vIFhYWDogVGhlc2UgY2hlY2tzIGFyZSBub3QgY3Jvc3Mtc2lnbmluZyBhd2FyZSBidXQgdGhpcyBjb21wb25lbnQgaXMgb25seSB1c2VkXG4gICAgICAgIC8vIGZyb20gdGhlIG9sZCwgcHJlLWNyb3NzLXNpZ25pbmcgbWVtYmVyaW5mb3BhbmVsXG4gICAgICAgIGNvbnN0IGljb25DbGFzc2VzID0gY2xhc3NOYW1lcyh7XG4gICAgICAgICAgICBteF9NZW1iZXJEZXZpY2VJbmZvX2ljb246IHRydWUsXG4gICAgICAgICAgICBteF9NZW1iZXJEZXZpY2VJbmZvX2ljb25fYmxhY2tsaXN0ZWQ6IHRoaXMucHJvcHMuZGV2aWNlLmlzQmxvY2tlZCgpLFxuICAgICAgICAgICAgbXhfTWVtYmVyRGV2aWNlSW5mb19pY29uX3ZlcmlmaWVkOiB0aGlzLnByb3BzLmRldmljZS5pc1ZlcmlmaWVkKCksXG4gICAgICAgICAgICBteF9NZW1iZXJEZXZpY2VJbmZvX2ljb25fdW52ZXJpZmllZDogdGhpcy5wcm9wcy5kZXZpY2UuaXNVbnZlcmlmaWVkKCksXG4gICAgICAgIH0pO1xuICAgICAgICBjb25zdCBpbmRpY2F0b3IgPSAoPGRpdiBjbGFzc05hbWU9e2ljb25DbGFzc2VzfSAvPik7XG4gICAgICAgIGNvbnN0IGRldmljZU5hbWUgPSAodGhpcy5wcm9wcy5kZXZpY2UuYW1iaWd1b3VzIHx8IHRoaXMucHJvcHMuc2hvd0RldmljZUlkKSA/XG4gICAgICAgICAgICAodGhpcy5wcm9wcy5kZXZpY2UuZ2V0RGlzcGxheU5hbWUoKSA/IHRoaXMucHJvcHMuZGV2aWNlLmdldERpc3BsYXlOYW1lKCkgOiBcIlwiKSArIFwiIChcIiArIHRoaXMucHJvcHMuZGV2aWNlLmRldmljZUlkICsgXCIpXCIgOlxuICAgICAgICAgICAgdGhpcy5wcm9wcy5kZXZpY2UuZ2V0RGlzcGxheU5hbWUoKTtcblxuICAgICAgICAvLyBhZGQgdGhlIGRldmljZUlkIGFzIGEgdGl0bGV0ZXh0IHRvIGhlbHAgd2l0aCBkZWJ1Z2dpbmdcbiAgICAgICAgcmV0dXJuIChcbiAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwibXhfTWVtYmVyRGV2aWNlSW5mb1wiXG4gICAgICAgICAgICAgICAgICAgIHRpdGxlPXtfdChcImRldmljZSBpZDogXCIpICsgdGhpcy5wcm9wcy5kZXZpY2UuZGV2aWNlSWR9ID5cbiAgICAgICAgICAgICAgICB7IGluZGljYXRvciB9XG4gICAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJteF9NZW1iZXJEZXZpY2VJbmZvX2RldmljZUluZm9cIj5cbiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJteF9NZW1iZXJEZXZpY2VJbmZvX2RldmljZUlkXCI+XG4gICAgICAgICAgICAgICAgICAgICAgICB7IGRldmljZU5hbWUgfVxuICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgICA8RGV2aWNlVmVyaWZ5QnV0dG9ucyB1c2VySWQ9e3RoaXMucHJvcHMudXNlcklkfSBkZXZpY2U9e3RoaXMucHJvcHMuZGV2aWNlfSAvPlxuICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICk7XG4gICAgfVxufVxuXG5NZW1iZXJEZXZpY2VJbmZvLmRpc3BsYXlOYW1lID0gJ01lbWJlckRldmljZUluZm8nO1xuTWVtYmVyRGV2aWNlSW5mby5wcm9wVHlwZXMgPSB7XG4gICAgdXNlcklkOiBQcm9wVHlwZXMuc3RyaW5nLmlzUmVxdWlyZWQsXG4gICAgZGV2aWNlOiBQcm9wVHlwZXMub2JqZWN0LmlzUmVxdWlyZWQsXG59O1xuIl19