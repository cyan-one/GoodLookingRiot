"use strict";

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

var _objectWithoutProperties2 = _interopRequireDefault(require("@babel/runtime/helpers/objectWithoutProperties"));

var _react = _interopRequireDefault(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _createReactClass = _interopRequireDefault(require("create-react-class"));

var _MatrixClientPeg = require("../../../MatrixClientPeg");

var _Modal = _interopRequireDefault(require("../../../Modal"));

var sdk = _interopRequireWildcard(require("../../../index"));

var Avatar = _interopRequireWildcard(require("../../../Avatar"));

var _contentRepo = require("matrix-js-sdk/src/content-repo");

/*
Copyright 2015, 2016 OpenMarket Ltd

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/
var _default = (0, _createReactClass.default)({
  displayName: 'RoomAvatar',
  // Room may be left unset here, but if it is,
  // oobData.avatarUrl should be set (else there
  // would be nowhere to get the avatar from)
  propTypes: {
    room: _propTypes.default.object,
    oobData: _propTypes.default.object,
    width: _propTypes.default.number,
    height: _propTypes.default.number,
    resizeMethod: _propTypes.default.string,
    viewAvatarOnClick: _propTypes.default.bool
  },
  getDefaultProps: function () {
    return {
      width: 36,
      height: 36,
      resizeMethod: 'crop',
      oobData: {}
    };
  },
  getInitialState: function () {
    return {
      urls: this.getImageUrls(this.props)
    };
  },
  componentDidMount: function () {
    _MatrixClientPeg.MatrixClientPeg.get().on("RoomState.events", this.onRoomStateEvents);
  },
  componentWillUnmount: function () {
    const cli = _MatrixClientPeg.MatrixClientPeg.get();

    if (cli) {
      cli.removeListener("RoomState.events", this.onRoomStateEvents);
    }
  },
  // TODO: [REACT-WARNING] Replace with appropriate lifecycle event
  UNSAFE_componentWillReceiveProps: function (newProps) {
    this.setState({
      urls: this.getImageUrls(newProps)
    });
  },
  onRoomStateEvents: function (ev) {
    if (!this.props.room || ev.getRoomId() !== this.props.room.roomId || ev.getType() !== 'm.room.avatar') return;
    this.setState({
      urls: this.getImageUrls(this.props)
    });
  },
  getImageUrls: function (props) {
    return [(0, _contentRepo.getHttpUriForMxc)(_MatrixClientPeg.MatrixClientPeg.get().getHomeserverUrl(), props.oobData.avatarUrl, Math.floor(props.width * window.devicePixelRatio), Math.floor(props.height * window.devicePixelRatio), props.resizeMethod), // highest priority
    this.getRoomAvatarUrl(props)].filter(function (url) {
      return url != null && url != "";
    });
  },
  getRoomAvatarUrl: function (props) {
    if (!props.room) return null;
    return Avatar.avatarUrlForRoom(props.room, Math.floor(props.width * window.devicePixelRatio), Math.floor(props.height * window.devicePixelRatio), props.resizeMethod);
  },
  onRoomAvatarClick: function () {
    const avatarUrl = this.props.room.getAvatarUrl(_MatrixClientPeg.MatrixClientPeg.get().getHomeserverUrl(), null, null, null, false);
    const ImageView = sdk.getComponent("elements.ImageView");
    const params = {
      src: avatarUrl,
      name: this.props.room.name
    };

    _Modal.default.createDialog(ImageView, params, "mx_Dialog_lightbox");
  },
  render: function () {
    const BaseAvatar = sdk.getComponent("avatars.BaseAvatar");
    /*eslint no-unused-vars: ["error", { "ignoreRestSiblings": true }]*/

    const _this$props = this.props,
          {
      room,
      oobData,
      viewAvatarOnClick
    } = _this$props,
          otherProps = (0, _objectWithoutProperties2.default)(_this$props, ["room", "oobData", "viewAvatarOnClick"]);
    const roomName = room ? room.name : oobData.name;
    return /*#__PURE__*/_react.default.createElement(BaseAvatar, (0, _extends2.default)({}, otherProps, {
      name: roomName,
      idName: room ? room.roomId : null,
      urls: this.state.urls,
      onClick: this.props.viewAvatarOnClick ? this.onRoomAvatarClick : null,
      disabled: !this.state.urls[0]
    }));
  }
});

exports.default = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,