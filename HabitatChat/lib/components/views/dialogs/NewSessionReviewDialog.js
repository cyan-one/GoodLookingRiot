"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var _react = _interopRequireDefault(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _languageHandler = require("../../../languageHandler");

var _Modal = _interopRequireDefault(require("../../../Modal"));

var _replaceableComponent = require("../../../utils/replaceableComponent");

var _VerificationRequestDialog = _interopRequireDefault(require("./VerificationRequestDialog"));

var _BaseDialog = _interopRequireDefault(require("./BaseDialog"));

var _DialogButtons = _interopRequireDefault(require("../elements/DialogButtons"));

var _MatrixClientPeg = require("../../../MatrixClientPeg");

var sdk = _interopRequireWildcard(require("../../../index"));

var _dec, _class, _class2, _temp;

let NewSessionReviewDialog = (_dec = (0, _replaceableComponent.replaceableComponent)("views.dialogs.NewSessionReviewDialog"), _dec(_class = (_temp = _class2 = class NewSessionReviewDialog extends _react.default.PureComponent {
  constructor(...args) {
    super(...args);
    (0, _defineProperty2.default)(this, "onCancelClick", () => {
      const ErrorDialog = sdk.getComponent("dialogs.ErrorDialog");

      _Modal.default.createTrackedDialog("Verification failed", "insecure", ErrorDialog, {
        headerImage: require("../../../../res/img/e2e/warning.svg"),
        title: (0, _languageHandler._t)("Your account is not secure"),
        description: /*#__PURE__*/_react.default.createElement("div", null, (0, _languageHandler._t)("One of the following may be compromised:"), /*#__PURE__*/_react.default.createElement("ul", null, /*#__PURE__*/_react.default.createElement("li", null, (0, _languageHandler._t)("Your password")), /*#__PURE__*/_react.default.createElement("li", null, (0, _languageHandler._t)("Your homeserver")), /*#__PURE__*/_react.default.createElement("li", null, (0, _languageHandler._t)("This session, or the other session")), /*#__PURE__*/_react.default.createElement("li", null, (0, _languageHandler._t)("The internet connection either session is using"))), /*#__PURE__*/_react.default.createElement("div", null, (0, _languageHandler._t)("We recommend you change your password and recovery key in Settings immediately"))),
        onFinished: () => this.props.onFinished(false)
      });
    });
    (0, _defineProperty2.default)(this, "onContinueClick", () => {
      const {
        userId,
        device
      } = this.props;

      const cli = _MatrixClientPeg.MatrixClientPeg.get();

      const requestPromise = cli.requestVerification(userId, [device.deviceId]);
      this.props.onFinished(true);

      _Modal.default.createTrackedDialog('New Session Verification', 'Starting dialog', _VerificationRequestDialog.default, {
        verificationRequestPromise: requestPromise,
        member: cli.getUser(userId)
      });
    });
  }

  render() {
    const {
      device
    } = this.props;

    const icon = /*#__PURE__*/_react.default.createElement("span", {
      className: "mx_NewSessionReviewDialog_headerIcon mx_E2EIcon_warning"
    });

    const titleText = (0, _languageHandler._t)("New session");

    const title = /*#__PURE__*/_react.default.createElement("h2", {
      className: "mx_NewSessionReviewDialog_header"
    }, icon, titleText);

    return /*#__PURE__*/_react.default.createElement(_BaseDialog.default, {
      title: title,
      onFinished: this.props.onFinished
    }, /*#__PURE__*/_react.default.createElement("div", {
      className: "mx_NewSessionReviewDialog_body"
    }, /*#__PURE__*/_react.default.createElement("p", null, (0, _languageHandler._t)("Use this session to verify your new one, " + "granting it access to encrypted messages:")), /*#__PURE__*/_react.default.createElement("div", {
      className: "mx_NewSessionReviewDialog_deviceInfo"
    }, /*#__PURE__*/_react.default.createElement("div", null, /*#__PURE__*/_react.default.createElement("span", {
      className: "mx_NewSessionReviewDialog_deviceName"
    }, device.getDisplayName()), " ", /*#__PURE__*/_react.default.createElement("span", {
      className: "mx_NewSessionReviewDialog_deviceID"
    }, "(", device.deviceId, ")"))), /*#__PURE__*/_react.default.createElement("p", null, (0, _languageHandler._t)("If you didnâ€™t sign in to this session, " + "your account may be compromised.")), /*#__PURE__*/_react.default.createElement(_DialogButtons.default, {
      cancelButton: (0, _languageHandler._t)("This wasn't me"),
      cancelButtonClass: "danger",
      primaryButton: (0, _languageHandler._t)("Continue"),
      onCancel: this.onCancelClick,
      onPrimaryButtonClick: this.onContinueClick
    })));
  }

}, (0, _defineProperty2.default)(_class2, "propTypes", {
  userId: _propTypes.default.string.isRequired,
  device: _propTypes.default.object.isRequired,
  onFinished: _propTypes.default.func.isRequired
}), _temp)) || _class);
exports.default = NewSessionReviewDialog;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,