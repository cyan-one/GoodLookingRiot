"use strict";

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var _react = _interopRequireDefault(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _TabbedView = _interopRequireWildcard(require("../../structures/TabbedView"));

var _languageHandler = require("../../../languageHandler");

var _GeneralUserSettingsTab = _interopRequireDefault(require("../settings/tabs/user/GeneralUserSettingsTab"));

var _SettingsStore = _interopRequireDefault(require("../../../settings/SettingsStore"));

var _LabsUserSettingsTab = _interopRequireDefault(require("../settings/tabs/user/LabsUserSettingsTab"));

var _SecurityUserSettingsTab = _interopRequireDefault(require("../settings/tabs/user/SecurityUserSettingsTab"));

var _NotificationUserSettingsTab = _interopRequireDefault(require("../settings/tabs/user/NotificationUserSettingsTab"));

var _PreferencesUserSettingsTab = _interopRequireDefault(require("../settings/tabs/user/PreferencesUserSettingsTab"));

var _VoiceUserSettingsTab = _interopRequireDefault(require("../settings/tabs/user/VoiceUserSettingsTab"));

var _HelpUserSettingsTab = _interopRequireDefault(require("../settings/tabs/user/HelpUserSettingsTab"));

var _FlairUserSettingsTab = _interopRequireDefault(require("../settings/tabs/user/FlairUserSettingsTab"));

var sdk = _interopRequireWildcard(require("../../../index"));

var _SdkConfig = _interopRequireDefault(require("../../../SdkConfig"));

var _MjolnirUserSettingsTab = _interopRequireDefault(require("../settings/tabs/user/MjolnirUserSettingsTab"));

/*
Copyright 2019 New Vector Ltd
Copyright 2019 The Matrix.org Foundation C.I.C.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/
class UserSettingsDialog extends _react.default.Component {
  constructor() {
    super();
    this.state = {
      mjolnirEnabled: _SettingsStore.default.isFeatureEnabled("feature_mjolnir")
    };
  }

  componentDidMount()
  /*: void*/
  {
    this._mjolnirWatcher = _SettingsStore.default.watchSetting("feature_mjolnir", null, this._mjolnirChanged.bind(this));
  }

  componentWillUnmount()
  /*: void*/
  {
    _SettingsStore.default.unwatchSetting(this._mjolnirWatcher);
  }

  _mjolnirChanged(settingName, roomId, atLevel, newValue) {
    // We can cheat because we know what levels a feature is tracked at, and how it is tracked
    this.setState({
      mjolnirEnabled: newValue
    });
  }

  _getTabs() {
    const tabs = [];
    tabs.push(new _TabbedView.Tab((0, _languageHandler._td)("General"), "mx_UserSettingsDialog_settingsIcon", /*#__PURE__*/_react.default.createElement(_GeneralUserSettingsTab.default, {
      closeSettingsFn: this.props.onFinished
    })));
    tabs.push(new _TabbedView.Tab((0, _languageHandler._td)("Flair"), "mx_UserSettingsDialog_flairIcon", /*#__PURE__*/_react.default.createElement(_FlairUserSettingsTab.default, null)));
    tabs.push(new _TabbedView.Tab((0, _languageHandler._td)("Notifications"), "mx_UserSettingsDialog_bellIcon", /*#__PURE__*/_react.default.createElement(_NotificationUserSettingsTab.default, null)));
    tabs.push(new _TabbedView.Tab((0, _languageHandler._td)("Preferences"), "mx_UserSettingsDialog_preferencesIcon", /*#__PURE__*/_react.default.createElement(_PreferencesUserSettingsTab.default, null)));
    tabs.push(new _TabbedView.Tab((0, _languageHandler._td)("Voice & Video"), "mx_UserSettingsDialog_voiceIcon", /*#__PURE__*/_react.default.createElement(_VoiceUserSettingsTab.default, null)));
    tabs.push(new _TabbedView.Tab((0, _languageHandler._td)("Security & Privacy"), "mx_UserSettingsDialog_securityIcon", /*#__PURE__*/_react.default.createElement(_SecurityUserSettingsTab.default, {
      closeSettingsFn: this.props.onFinished
    })));

    if (_SdkConfig.default.get()['showLabsSettings'] || _SettingsStore.default.getLabsFeatures().length > 0) {
      tabs.push(new _TabbedView.Tab((0, _languageHandler._td)("Labs"), "mx_UserSettingsDialog_labsIcon", /*#__PURE__*/_react.default.createElement(_LabsUserSettingsTab.default, null)));
    }

    if (this.state.mjolnirEnabled) {
      tabs.push(new _TabbedView.Tab((0, _languageHandler._td)("Ignored users"), "mx_UserSettingsDialog_mjolnirIcon", /*#__PURE__*/_react.default.createElement(_MjolnirUserSettingsTab.default, null)));
    }

    tabs.push(new _TabbedView.Tab((0, _languageHandler._td)("Help & About"), "mx_UserSettingsDialog_helpIcon", /*#__PURE__*/_react.default.createElement(_HelpUserSettingsTab.default, {
      closeSettingsFn: this.props.onFinished
    })));
    return tabs;
  }

  render() {
    const BaseDialog = sdk.getComponent('views.dialogs.BaseDialog');
    return /*#__PURE__*/_react.default.createElement(BaseDialog, {
      className: "mx_UserSettingsDialog",
      hasCancel: true,
      onFinished: this.props.onFinished,
      title: (0, _languageHandler._t)("Settings")
    }, /*#__PURE__*/_react.default.createElement("div", {
      className: "ms_SettingsDialog_content"
    }, /*#__PURE__*/_react.default.createElement(_TabbedView.default, {
      tabs: this._getTabs()
    })));
  }

}

exports.default = UserSettingsDialog;
(0, _defineProperty2.default)(UserSettingsDialog, "propTypes", {
  onFinished: _propTypes.default.func.isRequired
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,