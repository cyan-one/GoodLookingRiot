"use strict";

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _react = _interopRequireDefault(require("react"));

var _createReactClass = _interopRequireDefault(require("create-react-class"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var sdk = _interopRequireWildcard(require("../../../index"));

var _languageHandler = require("../../../languageHandler");

/*
Copyright 2015, 2016 OpenMarket Ltd
Copyright 2017 New Vector Ltd.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/
var _default = (0, _createReactClass.default)({
  displayName: 'QuestionDialog',
  propTypes: {
    title: _propTypes.default.string,
    description: _propTypes.default.node,
    extraButtons: _propTypes.default.node,
    button: _propTypes.default.string,
    danger: _propTypes.default.bool,
    focus: _propTypes.default.bool,
    onFinished: _propTypes.default.func.isRequired,
    headerImage: _propTypes.default.string,
    quitOnly: _propTypes.default.bool,
    // quitOnly doesn't show the cancel button just the quit [x].
    fixedWidth: _propTypes.default.bool
  },
  getDefaultProps: function () {
    return {
      title: "",
      description: "",
      extraButtons: null,
      focus: true,
      hasCancelButton: true,
      danger: false,
      quitOnly: false
    };
  },
  onOk: function () {
    this.props.onFinished(true);
  },
  onCancel: function () {
    this.props.onFinished(false);
  },
  render: function () {
    const BaseDialog = sdk.getComponent('views.dialogs.BaseDialog');
    const DialogButtons = sdk.getComponent('views.elements.DialogButtons');
    let primaryButtonClass = "";

    if (this.props.danger) {
      primaryButtonClass = "danger";
    }

    return /*#__PURE__*/_react.default.createElement(BaseDialog, {
      className: "mx_QuestionDialog",
      onFinished: this.props.onFinished,
      title: this.props.title,
      contentId: "mx_Dialog_content",
      headerImage: this.props.headerImage,
      hasCancel: this.props.hasCancelButton,
      fixedWidth: this.props.fixedWidth
    }, /*#__PURE__*/_react.default.createElement("div", {
      className: "mx_Dialog_content",
      id: "mx_Dialog_content"
    }, this.props.description), /*#__PURE__*/_react.default.createElement(DialogButtons, {
      primaryButton: this.props.button || (0, _languageHandler._t)('OK'),
      primaryButtonClass: primaryButtonClass,
      cancelButton: this.props.cancelButton,
      hasCancel: this.props.hasCancelButton && !this.props.quitOnly,
      onPrimaryButtonClick: this.onOk,
      focus: this.props.focus,
      onCancel: this.onCancel
    }, this.props.extraButtons));
  }
});

exports.default = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3NyYy9jb21wb25lbnRzL3ZpZXdzL2RpYWxvZ3MvUXVlc3Rpb25EaWFsb2cuanMiXSwibmFtZXMiOlsiZGlzcGxheU5hbWUiLCJwcm9wVHlwZXMiLCJ0aXRsZSIsIlByb3BUeXBlcyIsInN0cmluZyIsImRlc2NyaXB0aW9uIiwibm9kZSIsImV4dHJhQnV0dG9ucyIsImJ1dHRvbiIsImRhbmdlciIsImJvb2wiLCJmb2N1cyIsIm9uRmluaXNoZWQiLCJmdW5jIiwiaXNSZXF1aXJlZCIsImhlYWRlckltYWdlIiwicXVpdE9ubHkiLCJmaXhlZFdpZHRoIiwiZ2V0RGVmYXVsdFByb3BzIiwiaGFzQ2FuY2VsQnV0dG9uIiwib25PayIsInByb3BzIiwib25DYW5jZWwiLCJyZW5kZXIiLCJCYXNlRGlhbG9nIiwic2RrIiwiZ2V0Q29tcG9uZW50IiwiRGlhbG9nQnV0dG9ucyIsInByaW1hcnlCdXR0b25DbGFzcyIsImNhbmNlbEJ1dHRvbiJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7QUFpQkE7O0FBQ0E7O0FBQ0E7O0FBQ0E7O0FBQ0E7O0FBckJBOzs7Ozs7Ozs7Ozs7Ozs7O2VBdUJlLCtCQUFpQjtBQUM1QkEsRUFBQUEsV0FBVyxFQUFFLGdCQURlO0FBRTVCQyxFQUFBQSxTQUFTLEVBQUU7QUFDUEMsSUFBQUEsS0FBSyxFQUFFQyxtQkFBVUMsTUFEVjtBQUVQQyxJQUFBQSxXQUFXLEVBQUVGLG1CQUFVRyxJQUZoQjtBQUdQQyxJQUFBQSxZQUFZLEVBQUVKLG1CQUFVRyxJQUhqQjtBQUlQRSxJQUFBQSxNQUFNLEVBQUVMLG1CQUFVQyxNQUpYO0FBS1BLLElBQUFBLE1BQU0sRUFBRU4sbUJBQVVPLElBTFg7QUFNUEMsSUFBQUEsS0FBSyxFQUFFUixtQkFBVU8sSUFOVjtBQU9QRSxJQUFBQSxVQUFVLEVBQUVULG1CQUFVVSxJQUFWLENBQWVDLFVBUHBCO0FBUVBDLElBQUFBLFdBQVcsRUFBRVosbUJBQVVDLE1BUmhCO0FBU1BZLElBQUFBLFFBQVEsRUFBRWIsbUJBQVVPLElBVGI7QUFTbUI7QUFDMUJPLElBQUFBLFVBQVUsRUFBRWQsbUJBQVVPO0FBVmYsR0FGaUI7QUFlNUJRLEVBQUFBLGVBQWUsRUFBRSxZQUFXO0FBQ3hCLFdBQU87QUFDSGhCLE1BQUFBLEtBQUssRUFBRSxFQURKO0FBRUhHLE1BQUFBLFdBQVcsRUFBRSxFQUZWO0FBR0hFLE1BQUFBLFlBQVksRUFBRSxJQUhYO0FBSUhJLE1BQUFBLEtBQUssRUFBRSxJQUpKO0FBS0hRLE1BQUFBLGVBQWUsRUFBRSxJQUxkO0FBTUhWLE1BQUFBLE1BQU0sRUFBRSxLQU5MO0FBT0hPLE1BQUFBLFFBQVEsRUFBRTtBQVBQLEtBQVA7QUFTSCxHQXpCMkI7QUEyQjVCSSxFQUFBQSxJQUFJLEVBQUUsWUFBVztBQUNiLFNBQUtDLEtBQUwsQ0FBV1QsVUFBWCxDQUFzQixJQUF0QjtBQUNILEdBN0IyQjtBQStCNUJVLEVBQUFBLFFBQVEsRUFBRSxZQUFXO0FBQ2pCLFNBQUtELEtBQUwsQ0FBV1QsVUFBWCxDQUFzQixLQUF0QjtBQUNILEdBakMyQjtBQW1DNUJXLEVBQUFBLE1BQU0sRUFBRSxZQUFXO0FBQ2YsVUFBTUMsVUFBVSxHQUFHQyxHQUFHLENBQUNDLFlBQUosQ0FBaUIsMEJBQWpCLENBQW5CO0FBQ0EsVUFBTUMsYUFBYSxHQUFHRixHQUFHLENBQUNDLFlBQUosQ0FBaUIsOEJBQWpCLENBQXRCO0FBQ0EsUUFBSUUsa0JBQWtCLEdBQUcsRUFBekI7O0FBQ0EsUUFBSSxLQUFLUCxLQUFMLENBQVdaLE1BQWYsRUFBdUI7QUFDbkJtQixNQUFBQSxrQkFBa0IsR0FBRyxRQUFyQjtBQUNIOztBQUNELHdCQUNJLDZCQUFDLFVBQUQ7QUFDSSxNQUFBLFNBQVMsRUFBQyxtQkFEZDtBQUVJLE1BQUEsVUFBVSxFQUFFLEtBQUtQLEtBQUwsQ0FBV1QsVUFGM0I7QUFHSSxNQUFBLEtBQUssRUFBRSxLQUFLUyxLQUFMLENBQVduQixLQUh0QjtBQUlJLE1BQUEsU0FBUyxFQUFDLG1CQUpkO0FBS0ksTUFBQSxXQUFXLEVBQUUsS0FBS21CLEtBQUwsQ0FBV04sV0FMNUI7QUFNSSxNQUFBLFNBQVMsRUFBRSxLQUFLTSxLQUFMLENBQVdGLGVBTjFCO0FBT0ksTUFBQSxVQUFVLEVBQUUsS0FBS0UsS0FBTCxDQUFXSjtBQVAzQixvQkFTSTtBQUFLLE1BQUEsU0FBUyxFQUFDLG1CQUFmO0FBQW1DLE1BQUEsRUFBRSxFQUFDO0FBQXRDLE9BQ00sS0FBS0ksS0FBTCxDQUFXaEIsV0FEakIsQ0FUSixlQVlJLDZCQUFDLGFBQUQ7QUFBZSxNQUFBLGFBQWEsRUFBRSxLQUFLZ0IsS0FBTCxDQUFXYixNQUFYLElBQXFCLHlCQUFHLElBQUgsQ0FBbkQ7QUFDSSxNQUFBLGtCQUFrQixFQUFFb0Isa0JBRHhCO0FBRUksTUFBQSxZQUFZLEVBQUUsS0FBS1AsS0FBTCxDQUFXUSxZQUY3QjtBQUdJLE1BQUEsU0FBUyxFQUFFLEtBQUtSLEtBQUwsQ0FBV0YsZUFBWCxJQUE4QixDQUFDLEtBQUtFLEtBQUwsQ0FBV0wsUUFIekQ7QUFJSSxNQUFBLG9CQUFvQixFQUFFLEtBQUtJLElBSi9CO0FBS0ksTUFBQSxLQUFLLEVBQUUsS0FBS0MsS0FBTCxDQUFXVixLQUx0QjtBQU1JLE1BQUEsUUFBUSxFQUFFLEtBQUtXO0FBTm5CLE9BUU0sS0FBS0QsS0FBTCxDQUFXZCxZQVJqQixDQVpKLENBREo7QUF5Qkg7QUFuRTJCLENBQWpCLEMiLCJzb3VyY2VzQ29udGVudCI6WyIvKlxuQ29weXJpZ2h0IDIwMTUsIDIwMTYgT3Blbk1hcmtldCBMdGRcbkNvcHlyaWdodCAyMDE3IE5ldyBWZWN0b3IgTHRkLlxuXG5MaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xueW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG5cbiAgICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcblxuVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG5TZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG5saW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbiovXG5cbmltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQgY3JlYXRlUmVhY3RDbGFzcyBmcm9tICdjcmVhdGUtcmVhY3QtY2xhc3MnO1xuaW1wb3J0IFByb3BUeXBlcyBmcm9tICdwcm9wLXR5cGVzJztcbmltcG9ydCAqIGFzIHNkayBmcm9tICcuLi8uLi8uLi9pbmRleCc7XG5pbXBvcnQgeyBfdCB9IGZyb20gJy4uLy4uLy4uL2xhbmd1YWdlSGFuZGxlcic7XG5cbmV4cG9ydCBkZWZhdWx0IGNyZWF0ZVJlYWN0Q2xhc3Moe1xuICAgIGRpc3BsYXlOYW1lOiAnUXVlc3Rpb25EaWFsb2cnLFxuICAgIHByb3BUeXBlczoge1xuICAgICAgICB0aXRsZTogUHJvcFR5cGVzLnN0cmluZyxcbiAgICAgICAgZGVzY3JpcHRpb246IFByb3BUeXBlcy5ub2RlLFxuICAgICAgICBleHRyYUJ1dHRvbnM6IFByb3BUeXBlcy5ub2RlLFxuICAgICAgICBidXR0b246IFByb3BUeXBlcy5zdHJpbmcsXG4gICAgICAgIGRhbmdlcjogUHJvcFR5cGVzLmJvb2wsXG4gICAgICAgIGZvY3VzOiBQcm9wVHlwZXMuYm9vbCxcbiAgICAgICAgb25GaW5pc2hlZDogUHJvcFR5cGVzLmZ1bmMuaXNSZXF1aXJlZCxcbiAgICAgICAgaGVhZGVySW1hZ2U6IFByb3BUeXBlcy5zdHJpbmcsXG4gICAgICAgIHF1aXRPbmx5OiBQcm9wVHlwZXMuYm9vbCwgLy8gcXVpdE9ubHkgZG9lc24ndCBzaG93IHRoZSBjYW5jZWwgYnV0dG9uIGp1c3QgdGhlIHF1aXQgW3hdLlxuICAgICAgICBmaXhlZFdpZHRoOiBQcm9wVHlwZXMuYm9vbCxcbiAgICB9LFxuXG4gICAgZ2V0RGVmYXVsdFByb3BzOiBmdW5jdGlvbigpIHtcbiAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgIHRpdGxlOiBcIlwiLFxuICAgICAgICAgICAgZGVzY3JpcHRpb246IFwiXCIsXG4gICAgICAgICAgICBleHRyYUJ1dHRvbnM6IG51bGwsXG4gICAgICAgICAgICBmb2N1czogdHJ1ZSxcbiAgICAgICAgICAgIGhhc0NhbmNlbEJ1dHRvbjogdHJ1ZSxcbiAgICAgICAgICAgIGRhbmdlcjogZmFsc2UsXG4gICAgICAgICAgICBxdWl0T25seTogZmFsc2UsXG4gICAgICAgIH07XG4gICAgfSxcblxuICAgIG9uT2s6IGZ1bmN0aW9uKCkge1xuICAgICAgICB0aGlzLnByb3BzLm9uRmluaXNoZWQodHJ1ZSk7XG4gICAgfSxcblxuICAgIG9uQ2FuY2VsOiBmdW5jdGlvbigpIHtcbiAgICAgICAgdGhpcy5wcm9wcy5vbkZpbmlzaGVkKGZhbHNlKTtcbiAgICB9LFxuXG4gICAgcmVuZGVyOiBmdW5jdGlvbigpIHtcbiAgICAgICAgY29uc3QgQmFzZURpYWxvZyA9IHNkay5nZXRDb21wb25lbnQoJ3ZpZXdzLmRpYWxvZ3MuQmFzZURpYWxvZycpO1xuICAgICAgICBjb25zdCBEaWFsb2dCdXR0b25zID0gc2RrLmdldENvbXBvbmVudCgndmlld3MuZWxlbWVudHMuRGlhbG9nQnV0dG9ucycpO1xuICAgICAgICBsZXQgcHJpbWFyeUJ1dHRvbkNsYXNzID0gXCJcIjtcbiAgICAgICAgaWYgKHRoaXMucHJvcHMuZGFuZ2VyKSB7XG4gICAgICAgICAgICBwcmltYXJ5QnV0dG9uQ2xhc3MgPSBcImRhbmdlclwiO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiAoXG4gICAgICAgICAgICA8QmFzZURpYWxvZ1xuICAgICAgICAgICAgICAgIGNsYXNzTmFtZT1cIm14X1F1ZXN0aW9uRGlhbG9nXCJcbiAgICAgICAgICAgICAgICBvbkZpbmlzaGVkPXt0aGlzLnByb3BzLm9uRmluaXNoZWR9XG4gICAgICAgICAgICAgICAgdGl0bGU9e3RoaXMucHJvcHMudGl0bGV9XG4gICAgICAgICAgICAgICAgY29udGVudElkPSdteF9EaWFsb2dfY29udGVudCdcbiAgICAgICAgICAgICAgICBoZWFkZXJJbWFnZT17dGhpcy5wcm9wcy5oZWFkZXJJbWFnZX1cbiAgICAgICAgICAgICAgICBoYXNDYW5jZWw9e3RoaXMucHJvcHMuaGFzQ2FuY2VsQnV0dG9ufVxuICAgICAgICAgICAgICAgIGZpeGVkV2lkdGg9e3RoaXMucHJvcHMuZml4ZWRXaWR0aH1cbiAgICAgICAgICAgID5cbiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cIm14X0RpYWxvZ19jb250ZW50XCIgaWQ9J214X0RpYWxvZ19jb250ZW50Jz5cbiAgICAgICAgICAgICAgICAgICAgeyB0aGlzLnByb3BzLmRlc2NyaXB0aW9uIH1cbiAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgICA8RGlhbG9nQnV0dG9ucyBwcmltYXJ5QnV0dG9uPXt0aGlzLnByb3BzLmJ1dHRvbiB8fCBfdCgnT0snKX1cbiAgICAgICAgICAgICAgICAgICAgcHJpbWFyeUJ1dHRvbkNsYXNzPXtwcmltYXJ5QnV0dG9uQ2xhc3N9XG4gICAgICAgICAgICAgICAgICAgIGNhbmNlbEJ1dHRvbj17dGhpcy5wcm9wcy5jYW5jZWxCdXR0b259XG4gICAgICAgICAgICAgICAgICAgIGhhc0NhbmNlbD17dGhpcy5wcm9wcy5oYXNDYW5jZWxCdXR0b24gJiYgIXRoaXMucHJvcHMucXVpdE9ubHl9XG4gICAgICAgICAgICAgICAgICAgIG9uUHJpbWFyeUJ1dHRvbkNsaWNrPXt0aGlzLm9uT2t9XG4gICAgICAgICAgICAgICAgICAgIGZvY3VzPXt0aGlzLnByb3BzLmZvY3VzfVxuICAgICAgICAgICAgICAgICAgICBvbkNhbmNlbD17dGhpcy5vbkNhbmNlbH1cbiAgICAgICAgICAgICAgICA+XG4gICAgICAgICAgICAgICAgICAgIHsgdGhpcy5wcm9wcy5leHRyYUJ1dHRvbnMgfVxuICAgICAgICAgICAgICAgIDwvRGlhbG9nQnV0dG9ucz5cbiAgICAgICAgICAgIDwvQmFzZURpYWxvZz5cbiAgICAgICAgKTtcbiAgICB9LFxufSk7XG4iXX0=